/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.savrui.components;

import java.awt.Color;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import savr.MainApplication;
import savr.conor.FoodItem;
import savr.conor.FoodStockApp;
import savr.conor.NonPerishableFood;
import savr.conor.PerishableFood;

/**
 *
 * @author conor
 */
public class FoodStockAppManager extends javax.swing.JPanel {

    /**
     * Creates new form FoodStockAppManager
     */
    private FoodStockApp fs;//declare fs as a field to initialize it once
    private ArrayList<FoodItem> foodItems;//list of all food items
    
    public FoodStockAppManager() {
        initComponents();        
        fs = new FoodStockApp();//initialize fs
        fs.addRecords();//add records to list on startup
        this.foodItems = fs.getFoodItem();//assign food items to the list
        

        //default view of fields is that these are hidden
        monthlyShelfLBL.setVisible(false);
        monthlyShelfTF.setVisible(false);
        storageTempLBL.setVisible(false);
        storageTempTF.setVisible(false);
    }
    //current index for the fooditems set to -1 to have blank at start
    private int currentIndex = -1;
    
    //updateFoodInfo puts the information in the food item views text fields
    private void updateFoodInfo(FoodItem item){
        nameTF.setText(item.getName());
        idTF.setText(String.valueOf(item.getId()));
        foodTypeTF.setText(item.getName());
        expiryDateTF.setText(item.getExpiryDate());
        quantityTF.setText(String.valueOf(item.getQuantity()));        
        if (item.needsRefrigeration()) {//check if item needs refrigeration
        perishableCB.setSelectedItem("Yes");  
        
        //set storage temp for perishablefoods
        if (item instanceof PerishableFood) {
            PerishableFood perishableItem = (PerishableFood) item;
            storageTempTF.setText(String.valueOf(perishableItem.getStorageTemp()));
        }
       } else {
        perishableCB.setSelectedItem("No");
        //set monthlyshelflife for nonperishable foods
        if (item instanceof NonPerishableFood) {
            NonPerishableFood nonPerishableItem = (NonPerishableFood) item;
            monthlyShelfTF.setText(String.valueOf(nonPerishableItem.getMonthlyShelfLife()));
        }
        }
    }
    
    private boolean filledFields() {
    //check the required fields have inputs
    if (idTF.getText().isEmpty() || quantityTF.getText().isEmpty() || nameTF.getText().isEmpty() ||
        perishableCB.getSelectedItem() == "None Selected" || expiryDateTF.getText().isEmpty()) {
        
        JOptionPane.showMessageDialog(null, "Invalid Details, Fill out all required fields");
        return false; //return false if fields missing
    }

    //check the perishable only field storage temp when selected
    String type = (String) perishableCB.getSelectedItem();//declare type variable and casts returning obj to string type
    if (type.equals("Yes") && storageTempTF.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter the Storage Temperature.");
        return false; // return false if field empty
    }

    //check monthly shelf life 
    if (type.equals("No") && monthlyShelfTF.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Please enter Monthly Shelf Life.");
        return false; //return false is fields empty
    }

    return true; //all fields filled return true
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        MenuPanel = new javax.swing.JPanel();
        checkStockPanel = new javax.swing.JPanel();
        fsmenuLBL = new javax.swing.JLabel();
        viewTypesPanel = new javax.swing.JPanel();
        vtmenuLBL = new javax.swing.JLabel();
        returnBTN = new javax.swing.JButton();
        exitBTN = new javax.swing.JButton();
        RightPanel = new javax.swing.JPanel();
        logoPanel = new javax.swing.JPanel();
        logoTitleLBL = new javax.swing.JLabel();
        conorLogoPanel1 = new savr.ConorLogoPanel();
        foodStockPanel = new javax.swing.JPanel();
        titleLBL = new javax.swing.JLabel();
        addBTN = new javax.swing.JButton();
        editBTN = new javax.swing.JButton();
        searchBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        nameLBL = new javax.swing.JLabel();
        idLBL = new javax.swing.JLabel();
        foodTypeLBL = new javax.swing.JLabel();
        expirydateLBL = new javax.swing.JLabel();
        quantityLBL = new javax.swing.JLabel();
        perishableLBL = new javax.swing.JLabel();
        nameTF = new com.ryansheridan.rfields.RTextField();
        idTF = new com.ryansheridan.rfields.RTextField();
        foodTypeTF = new com.ryansheridan.rfields.RTextField();
        expiryDateTF = new com.ryansheridan.rfields.RTextField();
        quantityTF = new com.ryansheridan.rfields.RTextField();
        perishableCB = new javax.swing.JComboBox<>();
        prevBTN = new javax.swing.JButton();
        viewmoveLBL = new javax.swing.JLabel();
        nextBTN = new javax.swing.JButton();
        monthlyShelfLBL = new javax.swing.JLabel();
        storageTempTF = new com.ryansheridan.rfields.RTextField();
        storageTempLBL = new javax.swing.JLabel();
        monthlyShelfTF = new com.ryansheridan.rfields.RTextField();
        viewingStockPanel = new javax.swing.JPanel();
        viewLBL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockTA = new javax.swing.JTextArea();
        optionLBL = new javax.swing.JLabel();
        optionCB = new javax.swing.JComboBox<>();
        submitBTN = new javax.swing.JButton();

        setBackground(new java.awt.Color(30, 30, 30));
        setToolTipText("");

        MenuPanel.setBackground(new java.awt.Color(55, 55, 55));

        checkStockPanel.setBackground(new java.awt.Color(102, 102, 102));
        checkStockPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkStockPanelMouseClicked(evt);
            }
        });

        fsmenuLBL.setBackground(new java.awt.Color(102, 102, 102));
        fsmenuLBL.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fsmenuLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fsmenuLBL.setText("Food Stock");
        fsmenuLBL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fsmenuLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fsmenuLBLMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout checkStockPanelLayout = new javax.swing.GroupLayout(checkStockPanel);
        checkStockPanel.setLayout(checkStockPanelLayout);
        checkStockPanelLayout.setHorizontalGroup(
            checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fsmenuLBL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
        );
        checkStockPanelLayout.setVerticalGroup(
            checkStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fsmenuLBL, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        viewTypesPanel.setBackground(new java.awt.Color(102, 102, 102));
        viewTypesPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewTypesPanelMouseClicked(evt);
            }
        });

        vtmenuLBL.setBackground(new java.awt.Color(102, 102, 102));
        vtmenuLBL.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        vtmenuLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        vtmenuLBL.setText("Food Types");
        vtmenuLBL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vtmenuLBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vtmenuLBLMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout viewTypesPanelLayout = new javax.swing.GroupLayout(viewTypesPanel);
        viewTypesPanel.setLayout(viewTypesPanelLayout);
        viewTypesPanelLayout.setHorizontalGroup(
            viewTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vtmenuLBL, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
        );
        viewTypesPanelLayout.setVerticalGroup(
            viewTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(vtmenuLBL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        returnBTN.setText("Return To Menu");
        buttonGroup2.add(returnBTN);
        returnBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBTNActionPerformed(evt);
            }
        });

        exitBTN.setText("Exit");
        buttonGroup2.add(exitBTN);
        exitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MenuPanelLayout = new javax.swing.GroupLayout(MenuPanel);
        MenuPanel.setLayout(MenuPanelLayout);
        MenuPanelLayout.setHorizontalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                        .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewTypesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkStockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuPanelLayout.createSequentialGroup()
                        .addComponent(returnBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        MenuPanelLayout.setVerticalGroup(
            MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuPanelLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(checkStockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(viewTypesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(MenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnBTN)
                    .addComponent(exitBTN))
                .addContainerGap())
        );

        RightPanel.setBackground(new java.awt.Color(40, 40, 40));
        RightPanel.setLayout(new javax.swing.OverlayLayout(RightPanel));

        logoPanel.setBackground(new java.awt.Color(40, 40, 40));

        logoTitleLBL.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        logoTitleLBL.setForeground(new java.awt.Color(240, 240, 240));
        logoTitleLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoTitleLBL.setText("Welcome to Savr ");
        logoTitleLBL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout logoPanelLayout = new javax.swing.GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logoTitleLBL, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                    .addComponent(conorLogoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(247, Short.MAX_VALUE))
        );
        logoPanelLayout.setVerticalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(logoTitleLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(conorLogoPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(101, Short.MAX_VALUE))
        );

        RightPanel.add(logoPanel);

        foodStockPanel.setBackground(new java.awt.Color(40, 40, 40));

        titleLBL.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titleLBL.setText("Savr Food Stock");

        addBTN.setText("Add");
        buttonGroup1.add(addBTN);
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        editBTN.setText("Edit");
        editBTN.setToolTipText("Need valid ID to edit entry");
        buttonGroup1.add(editBTN);
        editBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBTNActionPerformed(evt);
            }
        });

        searchBTN.setText("Search");
        searchBTN.setToolTipText("Search using the food items ID");
        buttonGroup1.add(searchBTN);
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        deleteBTN.setText("Delete");
        deleteBTN.setToolTipText("Delete Item by using its ID");
        buttonGroup1.add(deleteBTN);
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        nameLBL.setForeground(new java.awt.Color(240, 240, 240));
        nameLBL.setText("Name:");

        idLBL.setForeground(new java.awt.Color(240, 240, 240));
        idLBL.setText("ID:");

        foodTypeLBL.setForeground(new java.awt.Color(240, 240, 240));
        foodTypeLBL.setText("Food Type:");

        expirydateLBL.setForeground(new java.awt.Color(240, 240, 240));
        expirydateLBL.setText("Expiry Date:");

        quantityLBL.setForeground(new java.awt.Color(240, 240, 240));
        quantityLBL.setText("Quantity:");

        perishableLBL.setForeground(new java.awt.Color(240, 240, 240));
        perishableLBL.setText("Is It Perishable:");

        idTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idTFKeyPressed(evt);
            }
        });

        expiryDateTF.setPlaceholder("dd-mm-yyyy");
        expiryDateTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                expiryDateTFKeyPressed(evt);
            }
        });

        quantityTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantityTFKeyPressed(evt);
            }
        });

        perishableCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None Selected", "Yes", "No" }));
        perishableCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                perishableCBActionPerformed(evt);
            }
        });

        prevBTN.setText("<");
        prevBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevBTNActionPerformed(evt);
            }
        });

        viewmoveLBL.setForeground(new java.awt.Color(255, 255, 255));
        viewmoveLBL.setText("View");

        nextBTN.setText(">");
        nextBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBTNActionPerformed(evt);
            }
        });

        monthlyShelfLBL.setForeground(new java.awt.Color(255, 255, 255));
        monthlyShelfLBL.setText("Monthly Shelf Life:");

        storageTempTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                storageTempTFKeyPressed(evt);
            }
        });

        storageTempLBL.setForeground(new java.awt.Color(255, 255, 255));
        storageTempLBL.setText("Storage Temp:");

        monthlyShelfTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monthlyShelfTFKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout foodStockPanelLayout = new javax.swing.GroupLayout(foodStockPanel);
        foodStockPanel.setLayout(foodStockPanelLayout);
        foodStockPanelLayout.setHorizontalGroup(
            foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodStockPanelLayout.createSequentialGroup()
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(foodStockPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(foodStockPanelLayout.createSequentialGroup()
                                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addBTN)
                                    .addComponent(nameLBL)
                                    .addComponent(idLBL)
                                    .addComponent(foodTypeLBL)
                                    .addComponent(expirydateLBL)
                                    .addComponent(quantityLBL))
                                .addGap(18, 18, 18)
                                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(expiryDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(foodTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(foodStockPanelLayout.createSequentialGroup()
                                        .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(foodStockPanelLayout.createSequentialGroup()
                                                .addComponent(editBTN)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(searchBTN))
                                            .addComponent(titleLBL))
                                        .addGap(18, 18, 18)
                                        .addComponent(deleteBTN))
                                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(foodStockPanelLayout.createSequentialGroup()
                                .addComponent(monthlyShelfLBL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthlyShelfTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(foodStockPanelLayout.createSequentialGroup()
                                .addComponent(perishableLBL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(perishableCB, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(foodStockPanelLayout.createSequentialGroup()
                                .addComponent(storageTempLBL)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(storageTempTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(foodStockPanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(prevBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewmoveLBL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextBTN)))
                .addContainerGap(162, Short.MAX_VALUE))
        );
        foodStockPanelLayout.setVerticalGroup(
            foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(foodStockPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(titleLBL)
                .addGap(26, 26, 26)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameLBL)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLBL)
                    .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foodTypeLBL)
                    .addComponent(foodTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(expirydateLBL)
                    .addComponent(expiryDateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantityLBL)
                    .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(perishableLBL)
                    .addComponent(perishableCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthlyShelfLBL)
                    .addComponent(monthlyShelfTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storageTempLBL)
                    .addComponent(storageTempTF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prevBTN)
                    .addComponent(viewmoveLBL)
                    .addComponent(nextBTN))
                .addGap(18, 18, 18)
                .addGroup(foodStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBTN)
                    .addComponent(editBTN)
                    .addComponent(searchBTN)
                    .addComponent(deleteBTN))
                .addGap(35, 35, 35))
        );

        RightPanel.add(foodStockPanel);

        viewingStockPanel.setBackground(new java.awt.Color(40, 40, 40));

        viewLBL.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        viewLBL.setText("Savr View Perishable Food Types");

        stockTA.setColumns(20);
        stockTA.setRows(5);
        jScrollPane1.setViewportView(stockTA);

        optionLBL.setForeground(new java.awt.Color(240, 240, 240));
        optionLBL.setText("Select an option: ");

        optionCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None Selected", "Perishable Food", "Non-Perishable Food" }));

        submitBTN.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        submitBTN.setText("Submit");
        submitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewingStockPanelLayout = new javax.swing.GroupLayout(viewingStockPanel);
        viewingStockPanel.setLayout(viewingStockPanelLayout);
        viewingStockPanelLayout.setHorizontalGroup(
            viewingStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewingStockPanelLayout.createSequentialGroup()
                .addGroup(viewingStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(viewingStockPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(optionLBL)
                        .addGap(18, 18, 18)
                        .addComponent(optionCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(viewingStockPanelLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(viewLBL))
                    .addGroup(viewingStockPanelLayout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(submitBTN))
                    .addGroup(viewingStockPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        viewingStockPanelLayout.setVerticalGroup(
            viewingStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewingStockPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(viewLBL)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(viewingStockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optionLBL)
                    .addComponent(optionCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitBTN)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        RightPanel.add(viewingStockPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MenuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MenuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(RightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fsmenuLBLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fsmenuLBLMouseClicked
        // when button is clicked hide other two panels and make foodStockPanel visible
        foodStockPanel.setVisible(true);
        logoPanel.setVisible(false);
        viewingStockPanel.setVisible(false);
        
        //add a different background color to in use tab
        checkStockPanel.setBackground(new Color(40,40,40));
        viewTypesPanel.setBackground(new Color (102,102,102));
    }//GEN-LAST:event_fsmenuLBLMouseClicked

    private void vtmenuLBLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vtmenuLBLMouseClicked
        // when button is clicked hide other two panels and make viewingStockPanel visible
        foodStockPanel.setVisible(false);
        logoPanel.setVisible(false);
        viewingStockPanel.setVisible(true);
        
        //add a different background color to in use tab
        viewTypesPanel.setBackground(new Color(40,40,40));
        checkStockPanel.setBackground(new Color (102,102,102));
    }//GEN-LAST:event_vtmenuLBLMouseClicked

    private void checkStockPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkStockPanelMouseClicked

    }//GEN-LAST:event_checkStockPanelMouseClicked

    private void viewTypesPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewTypesPanelMouseClicked

    }//GEN-LAST:event_viewTypesPanelMouseClicked

    private void exitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBTNActionPerformed
        // exit the program
        System.exit(0);
    }//GEN-LAST:event_exitBTNActionPerformed

    private void returnBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBTNActionPerformed
        MainApplication MainMenuFrame = new MainApplication();
        MainMenuFrame.setLocationRelativeTo(null);
        MainMenuFrame.setVisible(true);

       //close the parent frame containing this panel
       //move up swing component to find next window which is the zerohungerapp jframe
        Window parentFrame = SwingUtilities.getWindowAncestor(this);
            if (parentFrame != null) {//if panel is inside a window will close the current from
            parentFrame.dispose();
        }
        
    }//GEN-LAST:event_returnBTNActionPerformed

    private void perishableCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_perishableCBActionPerformed
    // hide and unhide the text fields related to whether food is perishable or not
        
    //get selected item from the CB
    String selectedOption = (String) perishableCB.getSelectedItem();
    
    //check the option selected
    if (selectedOption.equals("Yes")) {
        //if yes show monthly shelf life info
        storageTempLBL.setVisible(true);
        storageTempTF.setVisible(true);

        //hide the storage temp info if yes
        monthlyShelfLBL.setVisible(false);
        monthlyShelfTF.setVisible(false);
    } else if (selectedOption.equals("No")) {
        //else if no do the opposite
        monthlyShelfLBL.setVisible(true);
        monthlyShelfTF.setVisible(true);

       
        storageTempLBL.setVisible(false);
        storageTempTF.setVisible(false);
    } else {
        //else if none selected hide both again
        monthlyShelfLBL.setVisible(false);
        monthlyShelfTF.setVisible(false);
        storageTempLBL.setVisible(false);
        storageTempTF.setVisible(false);
    }
    }//GEN-LAST:event_perishableCBActionPerformed

    private void nextBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBTNActionPerformed
        // when clicked changes information in the text fields to next item in array
        
        //check if currentIndex is less than last index in array
        if(currentIndex < foodItems.size() - 1) {
            currentIndex++;
            updateFoodInfo(foodItems.get(currentIndex));//use updateFoodInfo to fill text fields with current index info
        }
    }//GEN-LAST:event_nextBTNActionPerformed

    private void prevBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevBTNActionPerformed
        // when clicked changes information in the text fields to previous item in array
        //if current index is more than 0
        if(currentIndex > 0){
            currentIndex--;//-1 to the currentindex to go back
            updateFoodInfo(foodItems.get(currentIndex));//update the fields to currentIndex
        }
    }//GEN-LAST:event_prevBTNActionPerformed

    private void submitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBTNActionPerformed
        // TODO add your handling code here:
        //get selected item from combo box and show on text area
        String selectedOption = (String) optionCB.getSelectedItem();//gets the selected item from cb
        String result = fs.viewRecords(selectedOption);// fs instance views records that are selected
        stockTA.setText(result);//area displays the result
    }//GEN-LAST:event_submitBTNActionPerformed

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        //add button to add records to the array list
        //if all valid fields are filled
        if (filledFields()) {
                   
            //get values from user input
            int id = Integer.parseInt(idTF.getText());
            int quantity = Integer.parseInt(quantityTF.getText());
            String name = nameTF.getText();
            String type = (String) perishableCB.getSelectedItem();
            String expiryDate = expiryDateTF.getText();
            String storageTemp = storageTempTF.getText();
            String monthlyShelfLife = monthlyShelfTF.getText();

            //add food item based on the type
            fs.addFoodItem(id, quantity, name, type, expiryDate, storageTemp, monthlyShelfLife);
        }
    }//GEN-LAST:event_addBTNActionPerformed

    private void idTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTFKeyPressed
        
        char keyChar = evt.getKeyChar();
        int key = evt.getKeyCode();

        // Check if the key is a digit or backspace, and allow only these keys
        if (!(Character.isDigit(keyChar) || key == KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // Prevent the key from being entered
            JOptionPane.showMessageDialog(null, "Only Digits 0-9 allowed for ID.");
            idTF.setText("");
        }
    
      
    }//GEN-LAST:event_idTFKeyPressed

    private void expiryDateTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expiryDateTFKeyPressed
        // TODO add your handling code here:      
        char keyChar = evt.getKeyChar();
        int key = evt.getKeyCode();

        // Check if the key is a digit or backspace, and allow only these keys
        if (!(Character.isDigit(keyChar) || key == KeyEvent.VK_BACK_SPACE || keyChar == '-')) {
            evt.consume();  // Prevent the key from being entered
            JOptionPane.showMessageDialog(null, "Only Digits 0-9 and - (dash) allowed for ExpiryDate.");
            expiryDateTF.setText("");
        }
    }//GEN-LAST:event_expiryDateTFKeyPressed

    private void quantityTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantityTFKeyPressed
        // TODO add your handling code here:
        char keyChar = evt.getKeyChar();
        int key = evt.getKeyCode();

        // Check if the key is a digit or backspace, and allow only these keys
        if (!(Character.isDigit(keyChar) || key == KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // Prevent the key from being entered
            JOptionPane.showMessageDialog(null, "Only Digits 0-9 allowed for Quantity.");
            quantityTF.setText("");
        }
    }//GEN-LAST:event_quantityTFKeyPressed

    private void monthlyShelfTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monthlyShelfTFKeyPressed
        // TODO add your handling code here:
        char keyChar = evt.getKeyChar();
        int key = evt.getKeyCode();

        // Check if the key is a digit or backspace, and allow only these keys
        if (!(Character.isDigit(keyChar) || key == KeyEvent.VK_BACK_SPACE )) {
            evt.consume();  // Prevent the key from being entered
            JOptionPane.showMessageDialog(null, "Only Digits 0-9 allowed for Quantity.");
            monthlyShelfTF.setText("");
        }
        
    }//GEN-LAST:event_monthlyShelfTFKeyPressed

    private void storageTempTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_storageTempTFKeyPressed
        // TODO add your handling code here:
        
        char keyChar = evt.getKeyChar();
        int key = evt.getKeyCode();

        // Check if the key is a digit or backspace, and allow only these keys
        if (!(Character.isDigit(keyChar) || key == KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // Prevent the key from being entered
            JOptionPane.showMessageDialog(null, "Only Digits 0-9 allowed for Quantity.");
            storageTempTF.setText("");
        }
    }//GEN-LAST:event_storageTempTFKeyPressed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        // this button searches for the user based off their ID
        try {
        //get id that user searches
        int id = Integer.parseInt(FoodStockAppManager.idTF.getText()); 
        
        //call search food method
        fs.searchFoodItem(id);  
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Please enter a valid integer for the ID.");
    }
    }//GEN-LAST:event_searchBTNActionPerformed

    private void editBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBTNActionPerformed
        // TODO add your handling code here:
        //this button allows the user to edit the details of a food item
        
        if(filledFields()){
            try{
                //get info from text fields
            int id = Integer.parseInt(idTF.getText());
            int quantity = Integer.parseInt(quantityTF.getText());
            String name = nameTF.getText();
            String type = (String) perishableCB.getSelectedItem();
            String expiryDate = expiryDateTF.getText();
            String storageTemp = storageTempTF.getText();
            String monthlyShelfLife = monthlyShelfTF.getText();
            
            fs.editFoodItem(id, quantity, name, type, expiryDate, storageTemp, monthlyShelfLife);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null,"Please enter valid input");
            }
        }
    }//GEN-LAST:event_editBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        // TODO add your handling code here:
        //button to delete a record from the arraylist
        try{
            int id = Integer.parseInt(idTF.getText());//get id that user inputted
            fs.deleteFoodItem(id);//call deletefooditem with parsed id
            
        }catch(NumberFormatException e){//if user doesnt input ints send message to user
            JOptionPane.showMessageDialog(null, "Please enter valid input");
        }
    }//GEN-LAST:event_deleteBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JPanel RightPanel;
    public static javax.swing.JButton addBTN;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel checkStockPanel;
    private savr.ConorLogoPanel conorLogoPanel1;
    public static javax.swing.JButton deleteBTN;
    public static javax.swing.JButton editBTN;
    private javax.swing.JButton exitBTN;
    public static com.ryansheridan.rfields.RTextField expiryDateTF;
    private javax.swing.JLabel expirydateLBL;
    public static javax.swing.JPanel foodStockPanel;
    private javax.swing.JLabel foodTypeLBL;
    public static com.ryansheridan.rfields.RTextField foodTypeTF;
    private javax.swing.JLabel fsmenuLBL;
    private javax.swing.JLabel idLBL;
    public static com.ryansheridan.rfields.RTextField idTF;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JPanel logoPanel;
    private javax.swing.JLabel logoTitleLBL;
    private javax.swing.JLabel monthlyShelfLBL;
    public static com.ryansheridan.rfields.RTextField monthlyShelfTF;
    private javax.swing.JLabel nameLBL;
    public static com.ryansheridan.rfields.RTextField nameTF;
    private javax.swing.JButton nextBTN;
    public static javax.swing.JComboBox<String> optionCB;
    private javax.swing.JLabel optionLBL;
    public static javax.swing.JComboBox<String> perishableCB;
    private javax.swing.JLabel perishableLBL;
    private javax.swing.JButton prevBTN;
    private javax.swing.JLabel quantityLBL;
    public static com.ryansheridan.rfields.RTextField quantityTF;
    private javax.swing.JButton returnBTN;
    public static javax.swing.JButton searchBTN;
    public static javax.swing.JTextArea stockTA;
    private javax.swing.JLabel storageTempLBL;
    public static com.ryansheridan.rfields.RTextField storageTempTF;
    public static javax.swing.JButton submitBTN;
    private javax.swing.JLabel titleLBL;
    private javax.swing.JLabel viewLBL;
    private javax.swing.JPanel viewTypesPanel;
    public static javax.swing.JPanel viewingStockPanel;
    private javax.swing.JLabel viewmoveLBL;
    public static javax.swing.JLabel vtmenuLBL;
    // End of variables declaration//GEN-END:variables

    
}
